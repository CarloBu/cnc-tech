---
import type { CollectionEntry } from 'astro:content';
import { Picture } from 'astro:assets';

export interface Props {
	content: CollectionEntry<'cardsCollection'>;
	imagePosition?: 'right' | 'bottom';
	size?: 'medium' | 'large';
}

const { content, imagePosition = 'right', size = 'medium' } = Astro.props;
---

<div class='card-container' data-card-id={content.id} data-image-position={imagePosition} data-size={size}>
	<div class='content-card-wrapper'>
		<div class='content-card'>
			<div class='card-bg'></div>
			<div class='card-content'>
				<h2 class='card-title'>{content.data.title}</h2>
				<p class='card-description fade-text'>{content.data.description}</p>
			</div>
		</div>

		<!-- Chevron positioned elements -->
		<div class='chevron chevron-top-left'></div>
		<div class='chevron chevron-top-right'></div>
		<div class='chevron chevron-bottom-left'></div>
		<div class='chevron chevron-bottom-right'></div>
	</div>

	<div class='image-card'>
		<div class='card-bg'></div>
		<Picture
			src={content.data.image}
			formats={['avif', 'webp']}
			alt={content.data.title}
			height={400}
			loading='eager'
			fetchpriority='high'
			decoding='async'
		/>
	</div>
</div>

<style>
	/* Container */
	.card-container {
		z-index: 2;
		display: none;
		pointer-events: none;
		gap: 1rem;
	}

	.card-container[data-image-position='right'] {
		flex-direction: row;
		align-items: flex-start;
	}

	.card-container[data-image-position='bottom'] {
		flex-direction: column;
		align-items: flex-start;
	}

	.card-container.visible {
		display: flex;
		pointer-events: auto;
		opacity: 1;
		transform: scale(1);
		will-change: transform;
	}

	/* Content card wrapper */
	.content-card-wrapper {
		position: relative;
		display: flex;
		flex-shrink: 0;
		padding: 0.375rem;
	}

	/* Base card styles */
	.content-card,
	.image-card {
		background: rgba(255, 255, 255, 0.8);
		backdrop-filter: blur(12px);
		-webkit-backdrop-filter: blur(12px);
		position: relative;
		width: 21rem;
		overflow: hidden;
		flex-shrink: 0;
		opacity: 1;
		transform: scale(0);
		display: flex;
		flex-direction: column;
		will-change: transform;
	}

	/* Content card */
	.content-card {
		height: auto;
		padding: 2.0625rem 2.715rem 3.125rem 3.4375rem;
		box-sizing: border-box;
		align-items: flex-start;
		justify-content: flex-start;
		mask-size: 100% 100%;
		mask-repeat: no-repeat;
		mask-position: center;
		-webkit-mask-size: 100% 100%;
		-webkit-mask-repeat: no-repeat;
		-webkit-mask-position: center;
	}

	.card-container[data-size='medium'] .content-card {
		mask-image: url('../assets/svgs/card-medium.svg');
		-webkit-mask-image: url('../assets/svgs/card-medium.svg');
	}

	.card-container[data-size='large'] .content-card {
		mask-image: url('../assets/svgs/card-large.svg');
		-webkit-mask-image: url('../assets/svgs/card-large.svg');
	}

	/* Chevrons */
	:root {
		--chevron-size: 0.75rem;
		/*--chevron-offset: 0.375rem;*/
	}

	.chevron {
		position: absolute;
		width: var(--chevron-size);
		height: var(--chevron-size);
		background-image: url('../assets/svgs/card-chevron.svg');
		background-size: contain;
		background-repeat: no-repeat;
		background-position: center;
		z-index: 3;
		pointer-events: none;
	}

	.chevron-top-left {
		top: 0;
		left: 0;
		transform: rotate(0deg);
	}

	.chevron-top-right {
		top: 0;
		right: 0;
		transform: rotate(90deg);
	}

	.chevron-bottom-left {
		bottom: 0;
		left: 0;
		transform: rotate(270deg);
	}

	.chevron-bottom-right {
		bottom: 0;
		right: 0;
		transform: rotate(180deg);
	}

	/* Image card */
	.image-card {
		margin-left: 0.375rem;
		margin-top: 0.375rem;
		height: 13.6875rem;
		mask-image: url('../assets/svgs/card-small.svg');
		-webkit-mask-image: url('../assets/svgs/card-small.svg');
	}

	/* Background and content */
	.card-bg {
		position: absolute;
		inset: 0;
		width: 100%;
		height: 100%;
		z-index: 1;
		will-change: transform;
	}

	.card-content {
		position: relative;
		z-index: 2;
		width: 100%;
		height: 100%;
		flex: 1;
		will-change: transform;
	}

	.image-card .card-content {
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.image-card img {
		width: 100%;
		height: 100%;
		object-fit: fill;
		display: block;
		opacity: 0.8;
		mix-blend-mode: multiply;
		will-change: transform;
	}

	/* Typography */
	.card-title {
		font-family: 'ProtoMono', sans-serif;
		font-size: 0.75rem;
		font-weight: 600;
		color: #333;
		text-align: left;
		margin: 0 0 1.5rem 0;
		will-change: transform;
	}

	.card-description {
		font-family: 'Suisse Intl', sans-serif;
		font-size: 0.875rem;
		font-weight: 400;
		color: #666;
		text-align: left;
		margin: 0;
		line-height: 1.3125;
		letter-spacing: 0.02em;
		will-change: transform;
	}

	/* Animation classes */
	.fade-text {
		opacity: 0;
	}
</style>

<!-- Card animations are now handled by gsapCardReveal.js -->
